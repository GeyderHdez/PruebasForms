<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>